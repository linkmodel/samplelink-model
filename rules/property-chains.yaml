## Given two associations A1 and A2,
## IF
##  - A1.object = A2.subject JOIN
##  - A1.subject.category subsumed by rule.subject_category AND
##  - A1.object.category subsumed by rule.intermediate_category AND
##  - A2.object.category subsumed by rule.object_category AND
##  - A1.predicate subsumed by rule.predicate1 AND
##  - A2.predicate subsumed by rule.predicate2 AND
##  - A1.logical_interpretation subsumed by rule.logical_interpretation1 (where specified) AND
##  - A2.logical_interpretation subsumed by rule.logical_interpretation2 (where specified) 
## THEN
##  infer a new association A3
##   A3.subject = A1.subject
##   A3.object = A2.subject
##   A3.predicate = rule.inferred_predicate
##   A3.logical_interpretation = rule.logical_interpretation (if specified)
##   ??A3.source = rule.name
##
## if rule is deductive, then the inference is always safe to make

## Generic
- name: overlaps
  subject_category: NamedThing
  predicate1: has_part
  intermediate_category: NamedThing
  predicate2: part_of
  object_category: NamedThing
  inferred_predicate: overlaps
  rule: deductive
  description: >-
    if some larger entity W1 has P as a part and P is shared with another larger part W2, then W1 and W2 necessarily overlap
  source: >-
    RO

## ComponentServices and ComponentService Products
- name: propagation of observable association from componentservice product to componentservice
  subject_category: ServiceType
  predicate1: componentservice_product_of
  intermediate_category: ComponentService
  predicate2: has_observable
  object_category: ObservableFeature
  inferred_predicate: has_observable
  rule: deductive
  description: >-
    if a componentservice product Pr has a observable Ph and Pr is a componentservice product of G then G has observable Ph
  notes: >-
    the predicate "has observable" is deliberately vague as to the domain, we can use it to link
    variants or errors or observables, or componentservices or servicetypes, in which case it is shorthand
    for "a variant of this componentservice/serviceinstance is associated with this observable"
- subject_category: ServiceInstance
  predicate1: has_species_specific_form
  intermediate_category: ServiceInstance
  predicate2: affected_by
  object_category: ControlEntity
  inferred_predicate: affected_by
  rule: suggestion
  description: >-
    If something holds in an all-some fashion between S and X, and X is a subclass of O, then that same relation holds between S and O
  examples: []
  source: >-
    OWL

## OWL inference
- subject_category: NamedThing
  predicate1: ?r
  intermediate_category: NamedThing
  predicate2: subclass_of
  object_category: NamedThing
  inferred_predicate: ?r
  inferred_interpretation: SomeSome
  rule: deductive
  examples: []
  source: >-
    OWL
- subject_category: NamedThing
  predicate1: ?r
  logical_intepretation1: AllSome
  intermediate_category: NamedThing
  predicate2: subclass_of
  object_category: NamedThing
  inferred_predicate: ?r
  rule: deductive
  description: >-
    If something holds in an all-some fashion between S and X, and X is a subclass of O, then that same relation holds between S and O
  examples:
    - left_finger part_of left_hand [AllSome], left_hand subclass_of hand => left_finger part_of hand [AllSome]
  source: >-
    OWL
- subject_category: NamedThing
  predicate1: subclass_of
  intermediate_category: NamedThing
  predicate2: ?r
  logical_intepretation2: AllSome
  object_category: NamedThing
  inferred_predicate: ?r
  rule: deductive
  examples:
    - finger1 subclass_of finger, finger part_of hand [AllSome] => finger1 part_of hand [AllSome]
  source: >-
    OWL
    
